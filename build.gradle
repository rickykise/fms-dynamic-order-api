plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'fassto.fms'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")

    // Log4j2
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'

    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.integration:spring-integration-kafka'
    implementation 'software.amazon.msk:aws-msk-iam-auth:2.0.3'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    //feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    container {
        mainClass = "fassto.fms.dynamicorderapi.FmsDynamicOrderApiApplication"
        creationTime.set("USE_CURRENT_TIMESTAMP")
    }

    from {
        image = 'openjdk:21-jdk-slim'
        platforms {
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
}