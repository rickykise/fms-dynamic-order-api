name: 'DEV Build & Push image to ECR'

on:
  push:
    branches: [ "dev" ]

jobs:
  push:
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.3
      - name: modify SecurityGroupRuleId ip
        env:
          PROTOCOL: TCP
          PORT: 443
        run: |
          aws ec2 modify-security-group-rules \
          --group-id ${{secrets.SG_ID}} \
          --security-group-rules "SecurityGroupRuleId=${{secrets.SG_RULE_ID}},SecurityGroupRule={Description='from github to argo',IpProtocol=${{env.PROTOCOL}},CidrIpv4=${{ steps.ip.outputs.ipv4 }}/32,FromPort=${{env.PORT}},ToPort=${{env.PORT}}}"
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Get sha_short
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Grant execute permission for gradlew
        run : chmod +x gradlew
      - name: Build with Gradle and Push Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          SHA_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          ./gradlew jib -Djib.to.image=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }} -Djib.to.tags=$IMAGE_TAG,$SHA_TAG
  deploy-develop:
    runs-on: ubuntu-20.04
    needs:
      - push
    steps:
      - name: Download ArgoCd CLI
        run: curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 && chmod +x /usr/local/bin/argocd
      - name: ArgoCd Login
        env:
          URL: ${{secrets.DEV_ARGO_ADDR}}
        run: argocd login ${{env.URL}} --grpc-web --username=${{ secrets.ARGO_USERNAME }} --password=${{ secrets.ARGO_PASSWORD }}
      - name: ArgoCd Deploy
        env:
          RESOURCE_NAME: ${{ secrets.ARGO_PROJECT_NAME_DEV }}
          KIND: Rollout
        run: |
          argocd app actions run ${{env.RESOURCE_NAME}} restart --kind ${{env.KIND}} --grpc-web
